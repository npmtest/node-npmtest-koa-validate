{"/home/travis/build/npmtest/node-npmtest-koa-validate/test.js":"/* istanbul instrument in package npmtest_koa_validate */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-koa-validate/lib.npmtest_koa_validate.js":"/* istanbul instrument in package npmtest_koa_validate */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_koa_validate = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_koa_validate = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-koa-validate/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-koa-validate && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_koa_validate */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_koa_validate\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_koa_validate.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_koa_validate.rollup.js'] =\n            local.assetsDict['/assets.npmtest_koa_validate.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_koa_validate.__dirname +\n                    '/lib.npmtest_koa_validate.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-koa-validate/node_modules/koa-validate/validate.js":"'use strict';\nvar util = require('util'),\nfs = require('fs'),\njpath = require('json-path'),\npath = require('path');\n\n\nfunction getValue(obj, key, transFn){\n\tif((0 == key.indexOf('/') || 0 == key.indexOf('#/')) && transFn) {\n\t\treturn jpath.resolve(obj, key)\n\t}\n\treturn obj[key]\n}\n\nfunction hasKey(obj, key, transFn) {\n\tif((0 == key.indexOf('/') || 0 == key.indexOf('#/')) && transFn) {\n\t\treturn (jpath.resolve(obj, key).length > 0) ? true : false\n\t}\n\treturn key in obj\n}\n\nmodule.exports = function(app) {\n\tapp.context.checkQuery = function(key,transFn) {\n\t\treturn new Validator(this, key, getValue(this.request.query,key,transFn), hasKey(this.request.query, key, transFn),this.request.query);\n\t};\n\tapp.context.checkParams = function(key) {\n\t\treturn new Validator(this, key, this.params[key], key in this.params,this.params);\n\t};\n\tapp.context.checkHeader = function(key) {\n\t\treturn new Validator(this, key, this.header[key], key in this.header,this.header);\n\t};\n\tapp.context.checkBody = function(key,transFn) {\n\t\tvar body = this.request.body;\n\n\t\tif(!body) {\n\t\t\tif(!this.errors){\n\t\t\t\tthis.errors = ['no body to check!'];\n\t\t\t}\n\t\t\treturn new Validator(this, null, null,false, null ,false );\n\t\t}\n\t\tvar body =  body.fields || body;\t// koa-body fileds. multipart fields in body.fields\n\t\treturn new Validator(this, key,getValue(body,key,transFn), hasKey(body, key, transFn), body);\n\t};\n\tapp.context.checkFile = function(key , deleteOnCheckFailed) {\n\t\tif('undefined' == typeof this.request.body || 'undefined' == typeof this.request.body.files ) {\n\t\t\tif(!this.errors){\n\t\t\t\tthis.errors = ['no file to check'];\n\t\t\t}\n\t\t\treturn new Validator(this, null, null,false, null,false );\n\t\t}\n\t\tdeleteOnCheckFailed = ('undefined' == typeof deleteOnCheckFailed?true :false);\n\t\tvar files = this.request.body.files;\n\t\treturn new FileValidator(this, key ,files&&files[key],!!(files&&files[key]) , this.request.body , deleteOnCheckFailed);\n\t};\n\t// return function* (next) {\n\t// \tyield next;\n\t// };\n\n};\n\nfunction isString(s) {\n\tif(null == s)return false;\n\treturn 'string' == typeof(s)?true:false\n}\n\nvar v = require('validator');\n\nfunction Validator(context, key, value, exists, params , goOn) {\n\tthis.params = params;\n\tthis.context = context;\n\tthis.key = key;\n\tthis.value = value;\n\tthis.exists = exists;\n\tthis.goOn = (false===goOn?false:true);\n\tif(this.value && this instanceof FileValidator && 'goOn' in this.value ){\n\t\tthis.goOn = this.value.goOn;\n\t}\n}\n\nmodule.exports.Validator = Validator;\n//Validators\nValidator.prototype.addError = function(tip) {\n\tthis.goOn = false;\n\tif(this.value && this instanceof FileValidator ){\n\t\tthis.value.goOn = false;\n\t}\n\tif (!this.context.errors) {\n\t\tthis.context.errors = [];\n\t}\n\tvar e = {};\n\te[this.key] = tip;\n\tthis.context.errors.push(e);\n};\n\nValidator.prototype.hasError = function() {\n\treturn this.context.errors && this.context.errors.length > 0 ? true : false;\n};\nValidator.prototype.optional = function() {\n\tif (!this.exists) {\n\t\tthis.goOn = false;\n\t}\n\treturn this;\n};\nValidator.prototype.notEmpty = function(tip) {\n\tif (this.goOn && (null==this.value||'undefined'==typeof(this.value) || ('string' == typeof(this.value) &&!this.value))) {\n\t\tthis.addError(tip || this.key + \" can not be empty.\");\n\t}\n\treturn this;\n};\nValidator.prototype.empty = function() {\n\tif (this.goOn) {\n\t\tif (!this.value) {\n\t\t\tthis.goOn = false;\n\t\t}\n\t}\n\treturn this;\n};\nValidator.prototype.notBlank = function(tip) {\n\tif (this.goOn && (null==this.value||'undefined'==typeof(this.value) || ('string' == typeof(this.value) &&(/^\\s*$/gi).test(this.value)))) {\n\t\tthis.addError(tip || this.key + \" can not be blank.\");\n\t}\n\treturn this;\n};\nValidator.prototype.exist = function(tip) {\n\tif (this.goOn && !this.exists) {\n\t\t this.addError(tip || this.key +\" should exists!\");\n\t}\n\treturn this;\n};\nValidator.prototype.match = function(reg, tip) {\n\tif (this.goOn && !reg.test(this.value)) {\n\t\tthis.addError(tip || this.key + \" is bad format.\");\n\t}\n\treturn this;\n};\n\n/**\nfrom danneu's proposal [https://github.com/danneu]\n*/\n// Ensure that a string does not match the supplied regular expression.\nValidator.prototype.notMatch = function(reg, tip) {\n    if (this.goOn && reg.test(this.value)) {\n        this.addError(tip || this.key + ' is bad format.');\n    }\n    return this;\n};\n// Ensure that `assertion`, an arbitrary value, is falsey.\nValidator.prototype.ensureNot = function(assertion, tip, shouldBail) {\n  if (shouldBail) this.goOn = false;\n    if (this.goOn && !!assertion) {\n        this.addError(tip || this.key + ' failed an assertion.');\n    }\n    return this;\n};\n// Ensure that `assertion`, an arbitrary value, is truthy.\nValidator.prototype.ensure = function(assertion, tip, shouldBail) {\n  if (shouldBail) this.goOn = false;\n    if (this.goOn && !assertion) {\n        this.addError(tip || this.key + ' failed an assertion.');\n    }\n    return this;\n};\n\nValidator.prototype.isInt = function(tip, options) {\n\tif (this.goOn&& !v.isInt(String(this.value), options)) {\n\t\tthis.addError(tip || this.key + \" is not integer.\");\n\t}\n\treturn this;\n};\nValidator.prototype.isFloat = function(tip,options) {\n\tif (this.goOn && !v.isFloat(String(this.value), options)) {\n\t\tthis.addError(tip || this.key + \" is not float.\");\n\t}\n\treturn this;\n};\n\nValidator.prototype.isLength = function(min, max, tip) {\n\tmin = min || 0;\n\ttip = 'number' != typeof max ? max : tip;\n\tmax = 'number' == typeof max ? max :-1;\n\tthis.exist(tip);\n\tif (this.goOn) {\n\t\tif(this.value.length<min) {\n\t\t\tthis.addError(tip || this.key + \"'s length must equal or great than \" + min+\".\");\n\t\t\treturn this;\n\t\t}\n\t\tif (-1!=max&&this.value.length>max) {\n\t\t\tthis.addError(tip || this.key + \"'s length must equal or less than \" + max + \".\");\n\t\t\treturn this;\n\t\t}\n\t}\n\treturn this;\n};\nValidator.prototype.len = Validator.prototype.isLength;\nValidator.prototype.in = function(arr, tip) {\n\tif (this.goOn && arr) {\n\t\tfor(var i = 0 ; i < arr.length ;i++){\n\t\t\tif(this.value == arr[i]){\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.addError(tip || this.key + \" must be in [\" + arr.join(',') + \"].\");\n\t}\n\treturn this;\n};\nValidator.prototype.isIn = Validator.prototype.in;\nValidator.prototype.eq = function(l, tip) {\n\tif (this.goOn && this.value != l) {\n\t\tthis.addError(tip || this.key + \" is must equal \" + l + \".\");\n\t}\n\treturn this;\n};\nValidator.prototype.neq = function(l, tip) {\n\tif (this.goOn && this.value == l) {\n\t\tthis.addError(tip || this.key + \" is must not equal \" + l + \".\");\n\t}\n\treturn this;\n};\nValidator.prototype.gt = function(l, tip) {\n\tif (this.goOn && this.value <= l) {\n\t\tthis.addError(tip || this.key + \" must great than \" + l + \".\");\n\t}\n\treturn this;\n};\nValidator.prototype.lt = function(l, tip) {\n\tif (this.goOn && this.value >= l) {\n\t\tthis.addError(tip || this.key + \" must less than \" + l + \".\");\n\t}\n\treturn this;\n};\nValidator.prototype.ge = function(l, tip) {\n\tif (this.goOn && this.value < l) {\n\t\tthis.addError(tip || this.key + \" must great than or equal \" + l + \".\");\n\t}\n\treturn this;\n};\nValidator.prototype.le = function(l, tip) {\n\tif (this.goOn && this.value > l) {\n\t\tthis.addError(tip || this.key + \" must less than or equal \" + l + \".\");\n\t}\n\treturn this;\n};\nValidator.prototype.contains = function(s, tip) {\n\tif (this.goOn && (!isString(this.value) ||!v.contains(this.value,s))) {\n\t\tthis.addError(tip || this.key + \" is must contain \" + s + \".\");\n\t}\n\treturn this;\n};\nValidator.prototype.notContains = function(s, tip) {\n\tif (this.goOn && (!isString(this.value) ||v.contains(this.value,s))) {\n\t\tthis.addError(tip || this.key + \" is must not contain \" + s + \".\");\n\t}\n\treturn this;\n};\nValidator.prototype.isEmail = function(tip,options) {\n\tif (this.goOn && (!isString(this.value) ||!v.isEmail(this.value,options))) {\n\t\tthis.addError(tip || this.key + \" is not email format.\");\n\t}\n\treturn this;\n};\nValidator.prototype.isUrl = function(tip,options) {\n\tif (this.goOn && (!isString(this.value) ||!v.isURL(this.value,options))) {\n\t\tthis.addError(tip || this.key + \" is not url format.\");\n\t}\n\treturn this;\n};\nValidator.prototype.isIp = function(tip,version) {\n\tif (this.goOn && (!isString(this.value) ||!v.isIP(this.value,version))) {\n\t\tthis.addError(tip || this.key + \" is not ip format.\");\n\t}\n\treturn this;\n};\nValidator.prototype.isAlpha = function(tip,locale) {\n\tif (this.goOn && (!isString(this.value) ||!v.isAlpha(this.value,locale))) {\n\t\tthis.addError(tip || this.key + \" is not an alpha string.\");\n\t}\n\treturn this;\n};\nValidator.prototype.isNumeric = function(tip) {\n\tif (this.goOn && (!isString(this.value) ||!v.isNumeric(this.value))) {\n\t\tthis.addError(tip || this.key + \" is  not numeric.\");\n\t}\n\treturn this;\n};\n\nValidator.prototype.isAlphanumeric = function(tip,locale) {\n\tif (this.goOn && (!isString(this.value) ||!v.isAlphanumeric(this.value,locale))) {\n\t\tthis.addError(tip || this.key + \" is not an aphanumeric string.\");\n\t}\n\treturn this;\n};\nValidator.prototype.isBase64 = function(tip) {\n\tif (this.goOn && (!isString(this.value) ||!v.isBase64(this.value))) {\n\t\tthis.addError(tip || this.key + \" is not a base64 string.\");\n\t}\n\treturn this;\n};\nValidator.prototype.isHexadecimal = function(tip) {\n\tif (this.goOn && (!isString(this.value) ||!v.isHexadecimal(this.value))) {\n\t\tthis.addError(tip || this.key + \" is not a hexa decimal string.\");\n\t}\n\treturn this;\n};\nValidator.prototype.isHexColor = function(tip) {\n\tif (this.goOn && (!isString(this.value) ||!v.isHexColor(this.value))) {\n\t\tthis.addError(tip || this.key + \" is  not hex color format.\");\n\t}\n\treturn this;\n};\nValidator.prototype.isLowercase = function(tip) {\n\tif (this.goOn && (!isString(this.value) ||!v.isLowercase(this.value))) {\n\t\tthis.addError(tip || this.key + \" is not a lowwer case string\");\n\t}\n\treturn this;\n};\nValidator.prototype.isUppercase = function(tip) {\n\tif (this.goOn && (!isString(this.value) ||!v.isUppercase(this.value))) {\n\t\tthis.addError(tip || this.key + \" is not a upper case string.\");\n\t}\n\treturn this;\n};\nValidator.prototype.isDivisibleBy = function(n, tip) {\n\tif (this.goOn && (!isString(this.value) ||!v.isDivisibleBy(this.value, n))) {\n\t\tthis.addError(tip || this.key + \" can not divide by\" + n + \".\");\n\t}\n\treturn this;\n};\nValidator.prototype.isNull = function(tip) {\n\tif (this.goOn && (!isString(this.value) ||!v.isNull(this.value))) {\n\t\tthis.addError(tip || this.key + \" is not null.\");\n\t}\n\treturn this;\n};\nValidator.prototype.isByteLength = function(min, max,charset,tip) {\n\tmin = min || 0;\n\tmax = max || Number.MAX_VALUE;\n\tcharset = charset||'utf8';\n\tthis.notEmpty(tip);\n\tif (this.goOn) {\n\t\tvar bl = Buffer.byteLength(this.value , charset);\n\t\ttip = 'number' != typeof max ? max : tip;\n\t\tif (bl<min || bl>max) {\n\t\t\tthis.addError(tip || this.key + \"'s byte lenth great than \" + min +\" and less than \" + max + \".\" );\n\t\t}\n\t}\n\treturn this;\n};\nValidator.prototype.byteLength = Validator.prototype.isByteLength;\nValidator.prototype.isUUID = function(tip,ver) {\n\tif (this.goOn && (!isString(this.value) ||!v.isUUID(this.value,ver))) {\n\t\tthis.addError(tip || this.key + \" is not a UUID format.\");\n\t}\n\treturn this;\n};\nValidator.prototype.isDate = function(tip) {\n\tif (this.goOn && !util.isDate(this.value)  && (!isString(this.value) ||!v.isDate(this.value))) {\n\t\tthis.addError(tip || this.key + \" is not a date format.\");\n\t}\n\treturn this;\n};\nValidator.prototype.isTime = function(tip) {\n\tvar timeReg = /^(([0-1]?[0-9])|([2][0-3])):([0-5]?[0-9])(:([0-5]?[0-9]))?$/;\n\tif(this.goOn && ! timeReg.test(this.value)){\n\t\tthis.addError(tip || this.key + \" is not a time format.\");\n\t}\n\treturn this;\n};\n\nValidator.prototype.isAfter = function(d, tip) {\n\tif (this.goOn && (!isString(this.value) ||!v.isAfter(this.value, d))) {\n\t\tthis.addError(tip || this.key + \" must after \" + d + \".\");\n\t}\n\treturn this;\n};\nValidator.prototype.isBefore = function(d, tip) {\n\tif (this.goOn && (!isString(this.value) ||!v.isBefore(this.value, d))) {\n\t\tthis.addError(tip || this.key + \" must before \" + d + \".\");\n\t}\n\treturn this;\n};\nValidator.prototype.isCreditCard = function(tip) {\n\tif (this.goOn && (!isString(this.value) ||!v.isCreditCard(this.value))) {\n\t\tthis.addError(tip || this.key + \" is not credit card format.\");\n\t}\n\treturn this;\n};\nValidator.prototype.isISBN = function(tip,version) {\n\tif (this.goOn && (!isString(this.value) ||!v.isISBN(this.value,version))) {\n\t\tthis.addError(tip || this.key + \" is not a ISBN format.\");\n\t}\n\treturn this;\n};\nValidator.prototype.isJSON = function(tip) {\n\tif (this.goOn && (!isString(this.value) ||!v.isJSON(this.value))) {\n\t\tthis.addError(tip || this.key + \" is not a json format.\");\n\t}\n\treturn this;\n};\n\nValidator.prototype.isMultibyte = function(tip) {\n\tif (this.goOn && (!isString(this.value) ||!v.isMultibyte(this.value))) {\n\t\tthis.addError(tip || this.key + \" is not a multibyte string.\");\n\t}\n\treturn this;\n};\nValidator.prototype.isAscii = function(tip) {\n\tif (this.goOn && (!isString(this.value) ||!v.isAscii(this.value))) {\n\t\tthis.addError(tip || this.key + \" is not a ascii string.\");\n\t}\n\treturn this;\n};\nValidator.prototype.isFullWidth = function(tip) {\n\tif (this.goOn && (!isString(this.value) ||!v.isFullWidth(this.value))) {\n\t\tthis.addError(tip || this.key + \" is not a full width string.\");\n\t}\n\treturn this;\n};\nValidator.prototype.isHalfWidth = function(tip) {\n\tif (this.goOn && (!isString(this.value) ||!v.isHalfWidth(this.value))) {\n\t\tthis.addError(tip || this.key + \" is not a half width string.\");\n\t}\n\treturn this;\n};\nValidator.prototype.isVariableWidth = function(tip) {\n\tif (this.goOn && (!isString(this.value) ||!v.isVariableWidth(this.value))) {\n\t\tthis.addError(tip || this.key + \" is not a variable width string.\");\n\t}\n\treturn this;\n};\nValidator.prototype.isSurrogatePair = function(tip) {\n\tif (this.goOn && (!isString(this.value) ||!v.isSurrogatePair(this.value))) {\n\t\tthis.addError(tip || this.key + \" is not a surrogate pair string.\");\n\t}\n\treturn this;\n};\nValidator.prototype.isCurrency = function(tip,options) {\n\tif (this.goOn && (!isString(this.value) ||!v.isCurrency(this.value,options))) {\n\t\tthis.addError(tip || this.key + \" is not a currency format.\");\n\t}\n\treturn this;\n};\nValidator.prototype.isDataURI = function(tip) {\n\tif (this.goOn && (!isString(this.value) ||!v.isDataURI(this.value))) {\n\t\tthis.addError(tip || this.key + \" is not a data uri format.\");\n\t}\n\treturn this;\n};\nValidator.prototype.isMobilePhone = function(tip,locale) {\n\tif (this.goOn && (!isString(this.value) ||!v.isMobilePhone(this.value,locale))) {\n\t\tthis.addError(tip || this.key + \" is not a mobile phone format.\");\n\t}\n\treturn this;\n};\nValidator.prototype.isISO8601 = function(tip) {\n\tif (this.goOn && (!isString(this.value) ||!v.isISO8601(this.value))) {\n\t\tthis.addError(tip || this.key + \" is not a ISO8601 string format.\");\n\t}\n\treturn this;\n};\nValidator.prototype.isMACAddress = function(tip) {\n\tif (this.goOn && (!isString(this.value) ||!v.isMACAddress(this.value))) {\n\t\tthis.addError(tip || this.key + \" is not a MAC address format.\");\n\t}\n\treturn this;\n};\n\nValidator.prototype.isISIN = function(tip) {\n\tif (this.goOn && (!isString(this.value) ||!v.isISIN(this.value))) {\n\t\tthis.addError(tip || this.key + \" is not a ISIN format.\");\n\t}\n\treturn this;\n};\nValidator.prototype.isFQDN = function(tip,options) {\n\tif (this.goOn && (!isString(this.value) ||!v.isFQDN(this.value,options))) {\n\t\tthis.addError(tip || this.key + \" is not a fully qualified domain name format.\");\n\t}\n\treturn this;\n};\n\n\n//Sanitizers\nValidator.prototype.default = function(d) {\n\tif(!this.hasError()&&!this.value){\n\t\tthis.value = this.params[this.key] = d;\n\t}\n\treturn this;\n};\nValidator.prototype.toDate = function() {\n\tthis.isDate();\n\tif (this.goOn && !this.hasError()) {\n\t\tthis.value = this.params[this.key] = v.toDate(this.value);\n\t}\n\treturn this;\n};\nValidator.prototype.toInt = function(tip, radix, options) {\n\tthis.isInt(tip, options);\n\tif (this.goOn && !this.hasError()) {\n\t\tif('number' == typeof(this.value)) {\n\t\t\treturn this;\n\t\t}\n\t\tthis.value = this.params[this.key] = v.toInt(this.value, radix);\n\t}\n\treturn this;\n};\nValidator.prototype.toFloat = function(tip) {\n\tthis.isFloat(tip);\n\tif (this.goOn && !this.hasError()) {\n\t\tif('number' == typeof(this.value)) {\n\t\t\treturn this;\n\t\t}\n\t\tthis.value = this.params[this.key] = v.toFloat(this.value);\n\t}\n\treturn this;\n};\nValidator.prototype.toJson = function(tip) {\n\tif (this.goOn && !this.hasError()) {\n\t\ttry{\n\t\t\tif('object' == typeof(this.value)) {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tthis.value = this.params[this.key] = JSON.parse(this.value);\n\t\t}catch(e){\n\t\t\tthis.addError(tip||'not json format');\n\t\t}\n\t}\n\treturn this;\n};\nValidator.prototype.toLowercase = function() {\n\tif (this.goOn && !this.hasError()&&this.value) {\n\t\tthis.value = this.params[this.key] = this.value.toLowerCase();\n\t}\n\treturn this;\n};\nValidator.prototype.toLow = Validator.prototype.toLowercase;\nValidator.prototype.toUppercase = function() {\n\tif (this.goOn && !this.hasError()&&this.value) {\n\t\tthis.value = this.params[this.key] = this.value.toUpperCase();\n\t}\n\treturn this;\n};\nValidator.prototype.toUp = Validator.prototype.toUppercase;\nValidator.prototype.toBoolean = function() {\n\tif (this.goOn && !this.hasError()) {\n\t\tif('boolean' == typeof(this.value)) {\n\t\t\treturn this;\n\t\t}\n\t\tif('string' == typeof(this.value)){\n\t\t\tthis.value = this.params[this.key] = v.toBoolean(this.value);\n\t\t}\n\t}\n\treturn this;\n};\nValidator.prototype.trim = function(c) {\n\tif (this.goOn && !this.hasError()) {\n\t\tthis.value = this.params[this.key] = v.trim(this.value,c);\n\t}\n\treturn this;\n};\nValidator.prototype.ltrim = function(c) {\n\tif (this.goOn && !this.hasError()) {\n\t\tthis.value = this.params[this.key] = v.ltrim(this.value,c);\n\t}\n\treturn this;\n};\nValidator.prototype.rtrim = function(c) {\n\tif (this.goOn && !this.hasError()) {\n\t\tthis.value = this.params[this.key] = v.rtrim(this.value,c);\n\t}\n\treturn this;\n};\nValidator.prototype.escape = function() {\n\tif (this.goOn && !this.hasError()) {\n\t\tthis.value = this.params[this.key] = v.escape(this.value);\n\t}\n\treturn this;\n};\nValidator.prototype.stripLow = function(nl) {\n\tif (this.goOn && !this.hasError()) {\n\t\tthis.value = this.params[this.key] = v.stripLow(this.value, nl);\n\t}\n\treturn this;\n};\nValidator.prototype.whitelist = function(s) {\n\tif (this.goOn && !this.hasError()) {\n\t\tthis.value = this.params[this.key] = v.whitelist(this.value,s);\n\t}\n\treturn this;\n};\nValidator.prototype.blacklist = function(s) {\n\tif (this.goOn && !this.hasError()) {\n\t\tthis.value = this.params[this.key] = v.blacklist(this.value,s);\n\t}\n\treturn this;\n};\nValidator.prototype.encodeURI = function() {\n\tif (this.goOn && !this.hasError()&&this.value) {\n\t\tthis.value = this.params[this.key] = encodeURI(this.value);\n\t}\n\treturn this;\n};\nValidator.prototype.decodeURI = function(tip) {\n\tif (this.goOn && !this.hasError()&&this.value) {\n\t\ttry{\n\t\t\tthis.value = this.params[this.key] = decodeURI(this.value);\n\t\t}catch(e){\n\t\t\tthis.addError(tip||'bad uri to decode.');\n\t\t}\n\t}\n\treturn this;\n};\nValidator.prototype.encodeURIComponent = function() {\n\tif (this.goOn && !this.hasError()&&this.value) {\n\t\tthis.value = this.params[this.key] = encodeURIComponent(this.value);\n\t}\n\treturn this;\n};\nValidator.prototype.decodeURIComponent = function(tip) {\n\tif (this.goOn && !this.hasError()&&this.value) {\n\t\ttry{\n\t\t\tthis.value = this.params[this.key] = decodeURIComponent(this.value);\n\t\t}catch(e){\n\t\t\tthis.addError(tip||'bad uri to decode.');\n\t\t}\n\t}\n\treturn this;\n};\nValidator.prototype.replace = function(a,b) {\n\tif (this.goOn && !this.hasError()&&this.value) {\n\t\tthis.value = this.params[this.key] = this.value.replace(a,b);\n\t}\n\treturn this;\n};\nValidator.prototype.encodeBase64 = function() {\n\tif (this.goOn && !this.hasError()&&this.value) {\n\t\tthis.value = this.params[this.key] = new Buffer(this.value).toString('base64');\n\t}\n\treturn this;\n};\nValidator.prototype.decodeBase64 = function(inBuffer ,tip) {\n\tif (!this.hasError()&&this.value) {\n\t\ttry{\n\t\t\tif(inBuffer){\n\t\t\t\tthis.value = this.params[this.key] = new Buffer(this.value , 'base64');\n\t\t\t}else{\n\t\t\t\tthis.value = this.params[this.key] = new Buffer(this.value , 'base64').toString();\n\t\t\t}\n\t\t}catch(e){\n\t\t\tthis.addError(tip||\"bad base64 format value\");\n\t\t}\n\t}\n\treturn this;\n};\nValidator.prototype.hash = function(alg , enc) {\n\tif (!this.hasError()&&this.value) {\n\t\tenc = enc ||'hex';\n\t\tthis.value = this.params[this.key] =require('crypto').createHash(alg).update(this.value).digest(enc);\n\t}\n\treturn this;\n};\nValidator.prototype.md5 = function() {\n\tthis.hash('md5');\n\treturn this;\n};\nValidator.prototype.sha1 = function() {\n\tthis.hash('sha1');\n\treturn this;\n};\nValidator.prototype.clone = function(key , value) {\n\tif (!this.hasError()&&this.value) {\n\t\tthis.value = this.params[key] = ('undefined' == typeof value?this.value:value);\n\t\tthis.key = key;\n\t}\n\treturn this;\n};\n\n\n// for json path value\n\nValidator.prototype.check = function(fn ,tip, scope) {\n\tif(this.goOn && !this.hasError()&&!fn.call(scope||this,this.value,this.key,this.context)) {\n\t\tthis.addError(tip||this.key+\" check failed.\")\n\t}\n\treturn this;\n}\nValidator.prototype.get = function(index) {\n\tif (this.value) {\n\t\tthis.value = this.value[index||0]\n\t}\n\treturn this;\n};\nValidator.prototype.first = function(index) {\n\treturn this.get(0);\n};\nValidator.prototype.filter = function(cb,scope) {\n\tif (this.value&&this.value.length>0) {\n\t\tvar vs = []\n\t\tfor(var i = 0 ;i<this.value.length;i++) {\n\t\t\tif(cb.call(scope||this,this.value[i],i,this.key,this.context)){\n\t\t\t\tvs.push(this.value[i])\n\t\t\t}\n\t\t}\n\t\tthis.value=vs;\n\t}\n\treturn this;\n};\n\nValidator.prototype.type = function(t,tip) {\n\tif(this.value){\n\t\tif('boolean'==t || 'string'==t|| 'number' == t || 'object' == t || 'undefined' ==t){\n\t\t\tif(t!=typeof(this.value)) this.addError(tip|| this.key+\" is not \"+t+\"\");\n\t\t}else if ('array' == t){\n\t\t\tif(!util.isArray(this.value)) this.addError(tip|| this.key+\" is not array\");\n\t\t}else if ('date' == t){\n\t\t\tif(!util.isDate(this.value)) this.addError(tip|| this.key+\" is not date.\");\n\t\t}else if ('null' == t){\n\t\t\tif(!util.isNull(this.value)) this.addError(tip|| this.key+\" is not null.\");\n\t\t}else if ('nullorundefined' == t.toLowerCase()){\n\t\t\tif(!util.isNullOrUndefined(this.value)) this.addError(tip|| this.key+\" is not primitive type.\");\n\t\t}else if ('primitive' == t){\n\t\t\tif(!util.isPrimitive(this.value)) this.addError(tip|| this.key+\" is not primitive type.\");\n\t\t}else{\n\t\t\tconsole.warn(\"not support this type check,type:'\"+t+\"'\")\n\t\t}\n\t}\n\treturn this;\n};\n\nfunction coFsExists(file){\n\treturn function(done){\n\t\tfs.exists(file,function(x){\n\t\t\treturn done(null , x);\n\t\t});\n\t};\n}\n\nfunction coFsMd(dir){\n\treturn function(done){\n\t\tfs.mkdir(dir , done);\n\t};\n}\n\nfunction coFsIsDir(file){\n\treturn function(done){\n\t\tfs.stat(file , function(e,r){\n\t\t\tdone(e , r.isDirectory());\n\t\t});\n\t};\n}\n\nfunction coFsCopy(src,dst){\n\treturn function(done){\n\t\tvar srcStream = fs.createReadStream(src);\n\t\tvar dstSteam = fs.createWriteStream(dst);\n\n\t\tsrcStream.pipe(dstSteam);\n\t\tsrcStream.on('end', function() {\n\t\t\tdone();\n\t\t});\n\t\tsrcStream.on('error', function(e) {\n\t\t\tdone(e);\n\t\t});\n\t};\n}\n\nfunction coFsDel(file){\n\treturn function(done){\n\t\tfs.unlink(file ,done);\n\t};\n}\n\nfunction*ensureDir(dir){\n\tif(!(yield coFsExists(dir))){\n\t\tyield ensureDir(path.dirname(dir));\n\t\tyield coFsMd(dir);\n\t}\n}\n\nfunction delFileAsync(path ,cb){\n\tif(!path){\n\t\tif(cb)cb();\n\t\treturn;\n\t}\n\tfs.unlink(path , function(e){\n\t\tif(e){\n\t\t\tconsole.error(e);\n\t\t}\n\t\tif(cb)cb(e);\n\t});\n}\n\nfunction isGeneratorFunction(obj) {\n  return obj && obj.constructor && 'GeneratorFunction' == obj.constructor.name;\n}\n\nfunction formatSize(size){\n\tif(size<1024){\n\t\treturn size+\" bytes\";\n\t}else if(size>=1024 && size<1024*1024){\n\t\treturn (size/1024).toFixed(2)+\" kb\";\n\t}else if(size >= 1024*1024 && size<1024*1024*1024){\n\t\treturn (size/(1024*1024)).toFixed(2)+\" mb\";\n\t}else{\n\t\treturn (size/(1024*1024*1024)).toFixed(2)+\" gb\";\n\t}\n}\n\n/**\nuse koa-body ,file object will be {type:\"image/jpeg\",path:\"\",name:\"\",size:\"\",mtile:\"\"}\n*/\nfunction FileValidator(context, key, value, exists, params,deleteOnCheckFailed){\n\tValidator.call(this,context, key, value, exists, params ,true);\n\tthis.deleteOnCheckFailed = deleteOnCheckFailed;\n}\nrequire(\"util\").inherits(FileValidator, Validator);\nmodule.exports.FileValidator = FileValidator;\n\n\nFileValidator.prototype.notEmpty = function(tip){\n\tif (this.goOn && (!this.value||this.value.size<=0)) {\n\t\tthis.addError(tip || \"file \"+ this.key + \" can not be a empty file.\");\n\t\tif(this.deleteOnCheckFailed){\n\t\t\tdelFileAsync(this.value&&this.value.path);\n\t\t}\n\t}\n\treturn this;\n};\n\nFileValidator.prototype.size = function(min,max,tip){\n\tif (this.goOn && (!this.value||this.value.size<min || this.value.size>max)) {\n\t\tthis.addError(tip || \"file \"+(this.value && this.value.name||this.key) + \"' length must between \"+formatSize(min)+\" and \"+formatSize(max)+\".\");\n\t\tif(this.deleteOnCheckFailed){\n\t\t\tdelFileAsync(this.value &&this.value.path);\n\t\t}\n\t}\n\treturn this;\n};\nFileValidator.prototype.contentTypeMatch = function(reg,tip){\n\tif (this.goOn && (!this.value || !reg.test(this.value.type))) {\n\t\tthis.addError(tip || \"file \"+ (this.value && this.value.name||this.key) + \" is bad format.\");\n\t\tif(this.deleteOnCheckFailed){\n\t\t\tdelFileAsync(this.value &&this.value.path);\n\t\t}\n\t}\n\treturn this;\n};\nFileValidator.prototype.isImageContentType = function(tip){\n\tif (this.goOn && (!this.value || 0!==this.value.type.indexOf('image/'))) {\n\t\tthis.addError(tip || \"file \"+ (this.value && this.value.name||this.key) + \" is not a image format.\");\n\t\tif(this.deleteOnCheckFailed){\n\t\t\tdelFileAsync(this.value &&this.value.path);\n\t\t}\n\t}\n\treturn this;\n};\nFileValidator.prototype.fileNameMatch = function(reg,tip){\n\tif (this.goOn && (!this.value || !reg.test(this.value.name))) {\n\t\tthis.addError(tip || \"file \"+ (this.value && this.value.name||this.key) + \" is bad file type.\");\n\t\tif(this.deleteOnCheckFailed){\n\t\t\tdelFileAsync(this.value&&this.value.path);\n\t\t}\n\t}\n\treturn this;\n};\nFileValidator.prototype.suffixIn = function(arr,tip){\n\tif (this.goOn && (!this.value || -1==arr.indexOf(-1==this.value.name.lastIndexOf('.')?\"\":this.value.name.substring(this.value.name.lastIndexOf('.')+1)))) {\n\t\tthis.addError(tip || \"file \"+ (this.value && this.value.name||this.key) + \" is bad file type.\");\n\t\tif(this.deleteOnCheckFailed){\n\t\t\tdelFileAsync(this.value &&this.value.path);\n\t\t}\n\t}\n\treturn this;\n};\nFileValidator.prototype.move = function*(dst,afterMove){\n\tif (this.goOn && this.value ) {\n\t\tyield this.copy(dst);\n\t\tyield coFsDel(this.value.path);\n\t\tif('function' == typeof afterMove){\n\t\t\tif(isGeneratorFunction(afterMove)){\n\t\t\t\tyield afterMove(this.value,this.key,this.context);\n\t\t\t}else{\n\t\t\t\tafterMove(this.value,this.key,this.context);\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\nFileValidator.prototype.copy = function*(dst,afterCopy){\n\tif (this.goOn && this.value ) {\n\t\tvar dstFile = dst;\n\t\tif('function' == typeof dst){\n\t\t\tif(isGeneratorFunction(dst)){\n\t\t\t\tdstFile = yield dst(this.value,this.key,this.context);\n\t\t\t}else{\n\t\t\t\tdstFile = dst(this.value,this.key,this.context);\n\t\t\t}\n\t\t}\n\t\tif(!(yield coFsExists(this.value.path))){\n\t\t\tthis.addError('upload file not exists');\n\t\t\treturn;\n\t\t}\n\t\tif(dstFile.length-1 == dstFile.lastIndexOf('/') ||dstFile.length-1 == dstFile.lastIndexOf('\\\\')||(yield coFsExists(dstFile)) && (yield coFsIsDir(dstFile))){\n\t\t\tdstFile = path.join(dstFile , path.basename(this.value.path));\n\t\t}\n\t\tyield ensureDir(path.dirname(dstFile));\n\t\tyield coFsCopy(this.value.path,dstFile);\n\t\tthis.value.newPath = dstFile;\n\t\tif('function' == typeof afterCopy){\n\t\t\tif(isGeneratorFunction(afterCopy)){\n\t\t\t\tyield afterCopy(this.value,this.key,this.context);\n\t\t\t}else{\n\t\t\t\tafterCopy(this.value,this.key,this.context);\n\t\t\t}\n\t\t}\n\t}\n\treturn this;\n};\nFileValidator.prototype.delete = function*(){\n\tif (this.goOn && this.value ) {\n\t\tyield coFsDel(this.value.path);\n\t}\n\treturn this;\n};\n"}